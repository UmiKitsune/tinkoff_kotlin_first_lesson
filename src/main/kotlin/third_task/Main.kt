package third_task

fun main() {
    puma.run()
    puma.swim()
    print(puma.sumSpeed)
}


val puma = Puma()


/*
    Задача 3. — 4 балла
    Дано

    Есть абстрактный класс Pet и два интерфейса Runnable и Swimmable с
    методами run() и swim() соответственно
    свойствами скорость бега и плавания - runSpeed и swimSpeed соответственно
    свойством «суммарная скорость»
    Есть два класса - Cat, Fish. Cat - может бегать и плавать, Fish - только плавать
    Каждый из наследников должен явно переопределять методы run или swim и выводить в них на печать сообщение:
    “I am a Tiger/Cat/Salmon, and i swimming / running”

    Задача :
    Реализовать некоторое количество (от 2) наследников классов Cat и Fish (например Tiger, Lion и Salmon, Tuna),
    которые будут реализовывать все методы которые необходимо.
    Каждый наследник должен высчитывать свойство «суммарная скорость»,
    при каждом доступе к нему, которое должно быть равно сумме скорости плавания.
*/